"use strict";(self.webpackChunkeasy_query_docs_docusaurus=self.webpackChunkeasy_query_docs_docusaurus||[]).push([[6569],{3905:(e,s,t)=>{t.d(s,{Zo:()=>u,kt:()=>h});var a=t(67294);function r(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function l(e,s){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);s&&(a=a.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{};s%2?l(Object(t),!0).forEach((function(s){r(e,s,t[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}))}return e}function n(e,s){if(null==e)return{};var t,a,r=function(e,s){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],s.indexOf(t)>=0||(r[t]=e[t]);return r}(e,s);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],s.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),c=function(e){var s=a.useContext(o),t=s;return e&&(t="function"==typeof e?e(s):i(i({},s),e)),t},u=function(e){var s=c(e.components);return a.createElement(o.Provider,{value:s},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var s=e.children;return a.createElement(a.Fragment,{},s)}},y=a.forwardRef((function(e,s){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=n(e,["components","mdxType","originalType","parentName"]),d=c(t),y=r,h=d["".concat(o,".").concat(y)]||d[y]||p[y]||l;return t?a.createElement(h,i(i({ref:s},u),{},{components:t})):a.createElement(h,i({ref:s},u))}));function h(e,s){var t=arguments,r=s&&s.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=y;var n={};for(var o in s)hasOwnProperty.call(s,o)&&(n[o]=s[o]);n.originalType=e,n[d]="string"==typeof e?e:r,i[1]=n;for(var c=2;c<l;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},69609:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const l={},i=void 0,n={unversionedId:"korzh-easyquery-services-namespace/$index",id:"korzh-easyquery-services-namespace/$index",title:"$index",description:"AggregatesContainer class",source:"@site/docs/korzh-easyquery-services-namespace/$index.md",sourceDirName:"korzh-easyquery-services-namespace",slug:"/korzh-easyquery-services-namespace/$index",permalink:"/easyquery/docs/api-reference/korzh-easyquery-services-namespace/$index",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pages class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-razorui-namespace/Pages class"},next:{title:"AggrGroupKey class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-services-namespace/AggrGroupKey class"}},o={},c=[{value:"AggregatesContainer class",id:"aggregatescontainer-class",level:2},{value:"AggregatesContainerBuilder class",id:"aggregatescontainerbuilder-class",level:2},{value:"AggrGroupKey class",id:"aggrgroupkey-class",level:2},{value:"AggrKeyBuilder class",id:"aggrkeybuilder-class",level:2},{value:"AggrLevelData class",id:"aggrleveldata-class",level:2},{value:"ChunkSettings class",id:"chunksettings-class",level:2},{value:"CustomValueListResolver class",id:"customvaluelistresolver-class",level:2},{value:"DataFetchMeta class",id:"datafetchmeta-class",level:2},{value:"DbConnectionModelLoader class",id:"dbconnectionmodelloader-class",level:2},{value:"DbContextModelLoader class",id:"dbcontextmodelloader-class",level:2},{value:"DbContextModelLoader&lt;T&gt; class",id:"dbcontextmodelloadert-class",level:2},{value:"DefaultEqAuthProvider class",id:"defaulteqauthprovider-class",level:2},{value:"EasyDbResultSet class",id:"easydbresultset-class",level:2},{value:"EasyObjectResultSet class",id:"easyobjectresultset-class",level:2},{value:"EasyQueryManager class",id:"easyquerymanager-class",level:2},{value:"EasyQueryManagerException class",id:"easyquerymanagerexception-class",level:2},{value:"EasyQueryManagerLinq&lt;T&gt; class",id:"easyquerymanagerlinqt-class",level:2},{value:"EasyQueryManagerSql class",id:"easyquerymanagersql-class",level:2},{value:"EasyQueryOptions class",id:"easyqueryoptions-class",level:2},{value:"EasyQueryOptionsExtensionsEf class",id:"easyqueryoptionsextensionsef-class",level:2},{value:"EasyQueryOptionsExtensionsEfCore class",id:"easyqueryoptionsextensionsefcore-class",level:2},{value:"EasyQueryOptionsExtensionsEfCoreIdentity class",id:"easyqueryoptionsextensionsefcoreidentity-class",level:2},{value:"EasyQueryOptionsExtensionsLinq class",id:"easyqueryoptionsextensionslinq-class",level:2},{value:"EasyQueryOptionsExtentionsAuth class",id:"easyqueryoptionsextentionsauth-class",level:2},{value:"EasyQueryOptionsExtentionsDb class",id:"easyqueryoptionsextentionsdb-class",level:2},{value:"EasyResultSet class",id:"easyresultset-class",level:2},{value:"EdmxFileModelLoader class",id:"edmxfilemodelloader-class",level:2},{value:"EmptyServiceProvider class",id:"emptyserviceprovider-class",level:2},{value:"EntityTypeModelLoader&lt;T&gt; class",id:"entitytypemodelloadert-class",level:2},{value:"EntityTypeModelLoaderOptions class",id:"entitytypemodelloaderoptions-class",level:2},{value:"EqAction class",id:"eqaction-class",level:2},{value:"EqResultSetError class",id:"eqresultseterror-class",level:2},{value:"EqResultSetExtensions class",id:"eqresultsetextensions-class",level:2},{value:"EqSessionCachingService class",id:"eqsessioncachingservice-class",level:2},{value:"EqTrivialAuthProvider class",id:"eqtrivialauthprovider-class",level:2},{value:"ExportAggrContainer class",id:"exportaggrcontainer-class",level:2},{value:"ExportAggrLevelData class",id:"exportaggrleveldata-class",level:2},{value:"ExportExtensions class",id:"exportextensions-class",level:2},{value:"FileModelLoader class",id:"filemodelloader-class",level:2},{value:"FileModelLoaderSettings class",id:"filemodelloadersettings-class",level:2},{value:"FileQueryStore class",id:"filequerystore-class",level:2},{value:"FileQueryStoreSettings class",id:"filequerystoresettings-class",level:2},{value:"IAggregatesContainerBuilder interface",id:"iaggregatescontainerbuilder-interface",level:2},{value:"IDataExportTuner interface",id:"idataexporttuner-interface",level:2},{value:"IDbResultSet interface",id:"idbresultset-interface",level:2},{value:"IEasyQueryConfigurator interface",id:"ieasyqueryconfigurator-interface",level:2},{value:"IEasyQueryManagerResolver interface",id:"ieasyquerymanagerresolver-interface",level:2},{value:"IEasyQueryManagerTuner interface",id:"ieasyquerymanagertuner-interface",level:2},{value:"IEqAuthProvider interface",id:"ieqauthprovider-interface",level:2},{value:"IEqCachingService interface",id:"ieqcachingservice-interface",level:2},{value:"IEqResultSet interface",id:"ieqresultset-interface",level:2},{value:"IModelLoader interface",id:"imodelloader-interface",level:2},{value:"IObjectResultSet interface",id:"iobjectresultset-interface",level:2},{value:"IPagedList&lt;T&gt; interface",id:"ipagedlistt-interface",level:2},{value:"IPaging interface",id:"ipaging-interface",level:2},{value:"IQueryStore interface",id:"iquerystore-interface",level:2},{value:"IValueListResolver interface",id:"ivaluelistresolver-interface",level:2},{value:"ListItem class",id:"listitem-class",level:2},{value:"ListItemComparer class",id:"listitemcomparer-class",level:2},{value:"ListRequestOptions class",id:"listrequestoptions-class",level:2},{value:"LookupValueListResolver class",id:"lookupvaluelistresolver-class",level:2},{value:"ModelLoaderException class",id:"modelloaderexception-class",level:2},{value:"ModelNotFoundException class",id:"modelnotfoundexception-class",level:2},{value:"PagedList&lt;T&gt; class",id:"pagedlistt-class",level:2},{value:"QueryListItem class",id:"querylistitem-class",level:2},{value:"QueryNotFoundException class",id:"querynotfoundexception-class",level:2},{value:"QueryStorageException class",id:"querystorageexception-class",level:2},{value:"ResultSetOptions class",id:"resultsetoptions-class",level:2},{value:"SqlValueListResolver class",id:"sqlvaluelistresolver-class",level:2},{value:"SqlValueListResolverException class",id:"sqlvaluelistresolverexception-class",level:2}],u={toc:c},d="wrapper";function p(e){let{components:s,...t}=e;return(0,r.kt)(d,(0,a.Z)({},u,t,{components:s,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"aggregatescontainer-class"},"AggregatesContainer class"),(0,r.kt)("h2",{id:"aggregatescontainerbuilder-class"},"AggregatesContainerBuilder class"),(0,r.kt)("h2",{id:"aggrgroupkey-class"},"AggrGroupKey class"),(0,r.kt)("h2",{id:"aggrkeybuilder-class"},"AggrKeyBuilder class"),(0,r.kt)("h2",{id:"aggrleveldata-class"},"AggrLevelData class"),(0,r.kt)("h2",{id:"chunksettings-class"},"ChunkSettings class"),(0,r.kt)("p",null,"Defines the parameters of one chunk of data requested from the client"),(0,r.kt)("h2",{id:"customvaluelistresolver-class"},"CustomValueListResolver class"),(0,r.kt)("p",null,"Class CustomValueListResolver.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ivaluelistresolver-interface"},"Korzh.EasyQuery.Services.IValueListResolver")),(0,r.kt)("h2",{id:"datafetchmeta-class"},"DataFetchMeta class"),(0,r.kt)("p",null,"Defines some meta data of the executed query."),(0,r.kt)("h2",{id:"dbconnectionmodelloader-class"},"DbConnectionModelLoader class"),(0,r.kt)("p",null,"Represents a IModelLoader implementation which allows to load the model directly from a connection (using DB meta data)"),(0,r.kt)("h2",{id:"dbcontextmodelloader-class"},"DbContextModelLoader class"),(0,r.kt)("p",null,"Represents a IModelLoader implementation which allows to load  the model from a DbContext object.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/imodelloader-interface"},"Korzh.EasyQuery.Services.IModelLoader")),(0,r.kt)("h2",{id:"dbcontextmodelloadert-class"},"DbContextModelLoader","<","T",">"," class"),(0,r.kt)("p",null,"Represents a IModelLoader implementation which allows to load  the model from a DbContext object.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/imodelloader-interface"},"Korzh.EasyQuery.Services.IModelLoader")),(0,r.kt)("h2",{id:"defaulteqauthprovider-class"},"DefaultEqAuthProvider class"),(0,r.kt)("p",null,"The default implementation of the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ieqauthprovider-interface"},"Korzh.EasyQuery.Services.IEqAuthProvider"),' interface.  Contains several methods which allow to mark some EasyQuery actions as "anonymous" (so they can be accessed by any user)  and to restrict the access to them depening on user role.'),(0,r.kt)("h2",{id:"easydbresultset-class"},"EasyDbResultSet class"),(0,r.kt)("p",null,"The result set."),(0,r.kt)("h2",{id:"easyobjectresultset-class"},"EasyObjectResultSet class"),(0,r.kt)("p",null,"Initializes a new instance of the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/easyobjectresultset-class"},"Korzh.EasyQuery.Services.EasyObjectResultSet")," class."),(0,r.kt)("h2",{id:"easyquerymanager-class"},"EasyQueryManager class"),(0,r.kt)("p",null,"Provides basic functionality for managing different EasyQuery operations and to process the AJAX requests from EasyQuery JavaScript widgets.  This class is abstract and it implements only the most common features.  The descendants of this class provides more concrete implementation of the model loading and query generation"),(0,r.kt)("h2",{id:"easyquerymanagerexception-class"},"EasyQueryManagerException class"),(0,r.kt)("p",null,"Represents errors that occur during EasyQueryManager's work.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,r.kt)("h2",{id:"easyquerymanagerlinqt-class"},"EasyQueryManagerLinq","<","T",">"," class"),(0,r.kt)("p",null,"Represents an implementation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/easyquerymanager-class"},"Korzh.EasyQuery.Services.EasyQueryManager"),"  which loads the model from some type and generates LINQ queries."),(0,r.kt)("h2",{id:"easyquerymanagersql-class"},"EasyQueryManagerSql class"),(0,r.kt)("p",null,"Represents an implementation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/easyquerymanager-class"},"Korzh.EasyQuery.Services.EasyQueryManager"),"  which generates SQL queries and can work with some relational DB directly."),(0,r.kt)("h2",{id:"easyqueryoptions-class"},"EasyQueryOptions class"),(0,r.kt)("p",null,"Contains various options used in EasyQueryMiddleware, EasyQueryManager and other classes."),(0,r.kt)("h2",{id:"easyqueryoptionsextensionsef-class"},"EasyQueryOptionsExtensionsEf class"),(0,r.kt)("p",null,"Contains several extension methods for EasyQueryOptions  which allow to tune up the EasyQuery manager and middleware  in case of using them with EntityFramework 6.x"),(0,r.kt)("h2",{id:"easyqueryoptionsextensionsefcore-class"},"EasyQueryOptionsExtensionsEfCore class"),(0,r.kt)("p",null,"Contains several extension methods for EasyQueryOptions  which allow to tune up the EasyQuery manager and middleware  in case of using them with EntityFrameworkCore"),(0,r.kt)("h2",{id:"easyqueryoptionsextensionsefcoreidentity-class"},"EasyQueryOptionsExtensionsEfCoreIdentity class"),(0,r.kt)("p",null,"Contains several extension methods for EasyQueryOptions  which allow to tune up the EasyQuery manager and middleware  in case of using them with EntityFrameworkCore and ASP.NET Core Identity"),(0,r.kt)("h2",{id:"easyqueryoptionsextensionslinq-class"},"EasyQueryOptionsExtensionsLinq class"),(0,r.kt)("p",null,"Contains several extension methods for EasyQueryOptions  which allow to tune up the EasyQuery manager and middleware  in case of using it for LINQ queries genereation"),(0,r.kt)("h2",{id:"easyqueryoptionsextentionsauth-class"},"EasyQueryOptionsExtentionsAuth class"),(0,r.kt)("p",null,"Contains several extension methods which simplifies the registration  of the default authorithation provider for EasyQuery actions."),(0,r.kt)("h2",{id:"easyqueryoptionsextentionsdb-class"},"EasyQueryOptionsExtentionsDb class"),(0,r.kt)("p",null,"Contains several extension methods for EasyQueryOptions  which allows to tune up the EasyQuery manager and middleware."),(0,r.kt)("h2",{id:"easyresultset-class"},"EasyResultSet class"),(0,r.kt)("p",null,"Indicates whether the data filling process has started already."),(0,r.kt)("h2",{id:"edmxfilemodelloader-class"},"EdmxFileModelLoader class"),(0,r.kt)("p",null,"Represents a IModelLoader implementation which allows to load  the model from an EDMX file  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/imodelloader-interface"},"Korzh.EasyQuery.Services.IModelLoader"),"."),(0,r.kt)("h2",{id:"emptyserviceprovider-class"},"EmptyServiceProvider class"),(0,r.kt)("p",null,"Implements DI Service provider that contains no element.  This class is used in ASP.NET 4 projects"),(0,r.kt)("h2",{id:"entitytypemodelloadert-class"},"EntityTypeModelLoader","<","T",">"," class"),(0,r.kt)("p",null,"An implementation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/imodelloader-interface"},"Korzh.EasyQuery.Services.IModelLoader"),"  which loads the model from some type."),(0,r.kt)("h2",{id:"entitytypemodelloaderoptions-class"},"EntityTypeModelLoaderOptions class"),(0,r.kt)("p",null,"Represents different options for ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/entitytypemodelloader-t--class"},"Korzh.EasyQuery.Services.EntityTypeModelLoader`1")," class"),(0,r.kt)("h2",{id:"eqaction-class"},"EqAction class"),(0,r.kt)("p",null,"Defines the constant strings for all possible actions"),(0,r.kt)("h2",{id:"eqresultseterror-class"},"EqResultSetError class"),(0,r.kt)("p",null,"Represents the error that occurs during the filling of the result set object."),(0,r.kt)("h2",{id:"eqresultsetextensions-class"},"EqResultSetExtensions class"),(0,r.kt)("p",null,"Creates the column."),(0,r.kt)("h2",{id:"eqsessioncachingservice-class"},"EqSessionCachingService class"),(0,r.kt)("p",null,"Represents an implemenation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ieqcachingservice-interface"},"Korzh.EasyQuery.Services.IEqCachingService"),"  which uses Session for storing cached objects."),(0,r.kt)("h2",{id:"eqtrivialauthprovider-class"},"EqTrivialAuthProvider class"),(0,r.kt)("p",null,"Represents a trivial implementation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ieqauthprovider-interface"},"Korzh.EasyQuery.Services.IEqAuthProvider"),"  which authorize any user for any action"),(0,r.kt)("h2",{id:"exportaggrcontainer-class"},"ExportAggrContainer class"),(0,r.kt)("h2",{id:"exportaggrleveldata-class"},"ExportAggrLevelData class"),(0,r.kt)("h2",{id:"exportextensions-class"},"ExportExtensions class"),(0,r.kt)("h2",{id:"filemodelloader-class"},"FileModelLoader class"),(0,r.kt)("p",null,"Represents a IModelLoader implemenation  which allows to load data model definitions (either XML or JSON) from the file system.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/imodelloader-interface"},"Korzh.EasyQuery.Services.IModelLoader")),(0,r.kt)("h2",{id:"filemodelloadersettings-class"},"FileModelLoaderSettings class"),(0,r.kt)("p",null,"Represents the settings for ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/filemodelloader-class"},"Korzh.EasyQuery.Services.FileModelLoader")),(0,r.kt)("h2",{id:"filequerystore-class"},"FileQueryStore class"),(0,r.kt)("p",null,"Represents the implementation of IQueryStore which store queries on the file system.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/iquerystore-interface"},"Korzh.EasyQuery.Services.IQueryStore")),(0,r.kt)("h2",{id:"filequerystoresettings-class"},"FileQueryStoreSettings class"),(0,r.kt)("p",null,"Represents the settings for ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/filequerystore-class"},"Korzh.EasyQuery.Services.FileQueryStore")),(0,r.kt)("h2",{id:"iaggregatescontainerbuilder-interface"},"IAggregatesContainerBuilder interface"),(0,r.kt)("h2",{id:"idataexporttuner-interface"},"IDataExportTuner interface"),(0,r.kt)("p",null,'Defines the interaces for "data export tuner" classes'),(0,r.kt)("h2",{id:"idbresultset-interface"},"IDbResultSet interface"),(0,r.kt)("p",null,"Represents an extension of IEqResultSet interface which also contains a function for creating a row.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ieqresultset-interface"},"Korzh.EasyQuery.Services.IEqResultSet")),(0,r.kt)("h2",{id:"ieasyqueryconfigurator-interface"},"IEasyQueryConfigurator interface"),(0,r.kt)("p",null,"Defines the configurator type - a class that contains Configure(options) method  that allows to set up all settings of EasyQuery middleware or controller.  It's useful when we need to define the same set of options for 2 (or more) different points in app  (e.g. for the middleware and for the background task that performs data export)"),(0,r.kt)("h2",{id:"ieasyquerymanagerresolver-interface"},"IEasyQueryManagerResolver interface"),(0,r.kt)("p",null,"Interface IEasyQueryManagerResolver  Contains only one function: GetManager which returns an instance of EasyQueryManagerBase descendant (like EasyQueryManagerSql or EasyQueryManagerLinq)  by DI services and options (an instance of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/easyqueryoptions-class"},"Korzh.EasyQuery.Services.EasyQueryOptions")," object)"),(0,r.kt)("h2",{id:"ieasyquerymanagertuner-interface"},"IEasyQueryManagerTuner interface"),(0,r.kt)("p",null,'Defines the interaces for "manager tuner" classes'),(0,r.kt)("h2",{id:"ieqauthprovider-interface"},"IEqAuthProvider interface"),(0,r.kt)("p",null,"Defines the functions necessary to check the authorization status of the current user  over EasyQuery actions"),(0,r.kt)("h2",{id:"ieqcachingservice-interface"},"IEqCachingService interface"),(0,r.kt)("p",null,"Represents a general caching service"),(0,r.kt)("h2",{id:"ieqresultset-interface"},"IEqResultSet interface"),(0,r.kt)("p",null,"Represents a type used to store the result set of the query execution."),(0,r.kt)("h2",{id:"imodelloader-interface"},"IModelLoader interface"),(0,r.kt)("p",null,"Represents a type used to perform model loading."),(0,r.kt)("h2",{id:"iobjectresultset-interface"},"IObjectResultSet interface"),(0,r.kt)("h2",{id:"ipagedlistt-interface"},"IPagedList","<","T",">"," interface"),(0,r.kt)("p",null,"Implements both ",(0,r.kt)("inlineCode",{parentName:"p"},"IPaging")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Collections.Generic.IEnumerable")," interfaces.  It's used to return paged list of objects."),(0,r.kt)("h2",{id:"ipaging-interface"},"IPaging interface"),(0,r.kt)("p",null,"Represents basic pagination parameters"),(0,r.kt)("h2",{id:"iquerystore-interface"},"IQueryStore interface"),(0,r.kt)("p",null,"Defines the basic operations of a query store."),(0,r.kt)("h2",{id:"ivaluelistresolver-interface"},"IValueListResolver interface"),(0,r.kt)("p",null,'Represents a type used to get the list of values by some "list" value editor.'),(0,r.kt)("h2",{id:"listitem-class"},"ListItem class"),(0,r.kt)("p",null,"Represents one item in lists returned as response for GetValueList request"),(0,r.kt)("h2",{id:"listitemcomparer-class"},"ListItemComparer class"),(0,r.kt)("p",null,"Represents the comparer for two ListItem objects  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Collections.Generic.IComparer'1")),(0,r.kt)("h2",{id:"listrequestoptions-class"},"ListRequestOptions class"),(0,r.kt)("p",null,"Represents different options specified in GetList AJAX request"),(0,r.kt)("h2",{id:"lookupvaluelistresolver-class"},"LookupValueListResolver class"),(0,r.kt)("p",null,"Represents a special case of IValueListResolver which returns the list of values for the lookup fields.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ivaluelistresolver-interface"},"Korzh.EasyQuery.Services.IValueListResolver")),(0,r.kt)("h2",{id:"modelloaderexception-class"},"ModelLoaderException class"),(0,r.kt)("p",null,"Represents errors that occur during the model loading.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,r.kt)("h2",{id:"modelnotfoundexception-class"},"ModelNotFoundException class"),(0,r.kt)("p",null,"Represents errors that occur during EasyQueryManager's work when  data model is not found.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,r.kt)("h2",{id:"pagedlistt-class"},"PagedList","<","T",">"," class"),(0,r.kt)("p",null,"Default implementation of ",(0,r.kt)("inlineCode",{parentName:"p"},"IPagedList")," interface"),(0,r.kt)("h2",{id:"querylistitem-class"},"QueryListItem class"),(0,r.kt)("p",null,"Represents one item in the list of queries (usually returned for GetQueries request)"),(0,r.kt)("h2",{id:"querynotfoundexception-class"},"QueryNotFoundException class"),(0,r.kt)("p",null,"Represents errors that occur during EasyQueryManager's work when  query is not found.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,r.kt)("h2",{id:"querystorageexception-class"},"QueryStorageException class"),(0,r.kt)("p",null,"Represents the error that occurs during the execution of some query storage operation.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,r.kt)("h2",{id:"resultsetoptions-class"},"ResultSetOptions class"),(0,r.kt)("p",null,"Represents some options used on fetching data and result set filling."),(0,r.kt)("h2",{id:"sqlvaluelistresolver-class"},"SqlValueListResolver class"),(0,r.kt)("p",null,"Represents a value editor which returns the list of values  retrieved from a database with some SQL SELECT statement.  Implements the ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/ivaluelistresolver-interface"},"Korzh.EasyQuery.Services.IValueListResolver")),(0,r.kt)("h2",{id:"sqlvaluelistresolverexception-class"},"SqlValueListResolverException class"),(0,r.kt)("p",null,"Represents errors that might occur during SqlValueListResolver's work.  Implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Exception")))}p.isMDXComponent=!0}}]);