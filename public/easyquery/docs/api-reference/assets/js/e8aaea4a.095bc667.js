"use strict";(self.webpackChunkeasy_query_docs_docusaurus=self.webpackChunkeasy_query_docs_docusaurus||[]).push([[3413],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,y=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?r.createElement(y,o(o({ref:t},d),{},{components:n})):r.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26890:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},o=void 0,s={unversionedId:"korzh-easyquery-namespace/StringExtensions class",id:"korzh-easyquery-namespace/StringExtensions class",title:"StringExtensions class",description:"Useful extension methods for strings",source:"@site/docs/korzh-easyquery-namespace/StringExtensions class.md",sourceDirName:"korzh-easyquery-namespace",slug:"/korzh-easyquery-namespace/StringExtensions class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-namespace/StringExtensions class",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SqlSyntax enum",permalink:"/easyquery/docs/api-reference/korzh-easyquery-namespace/SqlSyntax enum"},next:{title:"StringTokenizer class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-namespace/StringTokenizer class"}},l={},p=[{value:"Static Methods",id:"static-methods",level:3}],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Useful extension methods for strings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static class Korzh.EasyQuery.StringExtensions\n\n")),(0,a.kt)("p",null,"Assembly: ",(0,a.kt)("inlineCode",{parentName:"p"},"Korzh.EasyQuery.dll")),(0,a.kt)("h3",{id:"static-methods"},"Static Methods"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"CompareToCI(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s1, ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s2)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"int")),(0,a.kt)("td",{parentName:"tr",align:null},"Compares two strings case-insatively .")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GetSecondPart(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s, ",(0,a.kt)("inlineCode",{parentName:"td"},"Char")," sep)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets the second part of the string divided by separator. If the separator is not included - the whole string is returned.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"RemoveSymbols(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," str, ",(0,a.kt)("inlineCode",{parentName:"td"},"Char[]")," symbolsToRemove)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"Removes the characters specified in the ",(0,a.kt)("inlineCode",{parentName:"td"},"symbolsToRemove")," parameter and returns the modified string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SplitBy(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s, ",(0,a.kt)("inlineCode",{parentName:"td"},"Char")," sep, ",(0,a.kt)("inlineCode",{parentName:"td"},"String&")," key, ",(0,a.kt)("inlineCode",{parentName:"td"},"String&")," val)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"bool")),(0,a.kt)("td",{parentName:"tr",align:null},"Split the string on 2 parts by some separator.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ToInt(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s, ",(0,a.kt)("inlineCode",{parentName:"td"},"int")," defValue = 0)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"int")),(0,a.kt)("td",{parentName:"tr",align:null},"Converts the string representation of a number to its 32-bit signed integer equivalent.  This method does not throw an exception. Instead - it returns some pre-defined value for unsuccessful conversions.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ToLong(",(0,a.kt)("span",{style:{color:"blue"}},"this")," ",(0,a.kt)("inlineCode",{parentName:"td"},"string")," s, ",(0,a.kt)("inlineCode",{parentName:"td"},"long")," defValue = 0)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"long")),(0,a.kt)("td",{parentName:"tr",align:null},"Converts the string representation of a number to its 64-bit signed integer equivalent.  This method does not throw an exception. Instead - it returns some pre-defined value for unsuccessful conversions.")))))}c.isMDXComponent=!0}}]);