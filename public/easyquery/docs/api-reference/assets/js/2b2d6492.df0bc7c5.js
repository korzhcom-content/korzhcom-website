"use strict";(self.webpackChunkeasy_query_docs_docusaurus=self.webpackChunkeasy_query_docs_docusaurus||[]).push([[7503],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>y});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(a),c=r,y=u["".concat(o,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(y,s(s({ref:t},p),{},{components:a})):n.createElement(y,s({ref:t},p))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<l;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},71089:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={},s=void 0,i={unversionedId:"korzh-easyquery-services-namespace/EasyQueryManagerSql class",id:"korzh-easyquery-services-namespace/EasyQueryManagerSql class",title:"EasyQueryManagerSql class",description:"Represents an implementation of Korzh.EasyQuery.Services.EasyQueryManager  which generates SQL queries and can work with some relational DB directly.",source:"@site/docs/korzh-easyquery-services-namespace/EasyQueryManagerSql class.md",sourceDirName:"korzh-easyquery-services-namespace",slug:"/korzh-easyquery-services-namespace/EasyQueryManagerSql class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-services-namespace/EasyQueryManagerSql class",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EasyQueryManagerLinqT class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-services-namespace/EasyQueryManagerLinqT class"},next:{title:"EasyQueryOptions class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-services-namespace/EasyQueryOptions class"}},o={},d=[{value:"Constructors",id:"constructors",level:3},{value:"Properties",id:"properties",level:3},{value:"Methods",id:"methods",level:3},{value:"Static Methods",id:"static-methods",level:3}],p={toc:d},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Represents an implementation of ",(0,r.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/easyquerymanager-class"},"Korzh.EasyQuery.Services.EasyQueryManager"),"  which generates SQL queries and can work with some relational DB directly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Korzh.EasyQuery.Services.EasyQueryManagerSql\n    : EasyQueryManager\n\n")),(0,r.kt)("p",null,"Assembly: ",(0,r.kt)("inlineCode",{parentName:"p"},"Korzh.EasyQuery.Db.dll")),(0,r.kt)("h3",{id:"constructors"},"Constructors"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EasyQueryManagerSql()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null},"Initializes a new instance of the ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyquerymanagersql-class"},"Korzh.EasyQuery.Services.EasyQueryManagerSql")," class.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EasyQueryManagerSql(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyqueryoptions-class"},"EasyQueryOptions")," options)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null},"Initializes a new instance of the ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyquerymanagersql-class"},"Korzh.EasyQuery.Services.EasyQueryManagerSql")," class.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EasyQueryManagerSql(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyqueryoptions-class"},"EasyQueryOptions")," options, ",(0,r.kt)("inlineCode",{parentName:"td"},"IServiceProvider")," services)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null},"Initializes a new instance of the ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyquerymanagersql-class"},"Korzh.EasyQuery.Services.EasyQueryManagerSql")," class.")))),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ConnectionResolver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Func"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"DbConnection"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets or sets the connection resolver - a faunction that returs a connection object by model's ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DbCommandTuner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Action"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"DbCommand"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets or sets the function which is called before execution of some DbCommand.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Formats"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/sqlformats-class"},"SqlFormats")),(0,r.kt)("td",{parentName:"tr",align:null},"The SQL formats.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Model"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/dbmodel-class"},"DbModel")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the current model.  The value of this property is set on the first call of GetModel method.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Query"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/dbquery-class"},"DbQuery")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the current query.  The value of this property is set on the first call of GetQueryAsync method.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SqlQueryBuilder"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/sqlquerybuilder-class"},"SqlQueryBuilder")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns QueryBuilder associated with current Query")))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BuildQuery(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/querybuilderoptions-class"},"QueryBuilderOptions")," options = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/iquerystatement-interface"},"IQueryStatement")),(0,r.kt)("td",{parentName:"tr",align:null},"Builds a ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/iquerystatement-interface"},"Korzh.EasyQuery.IQueryStatement")," object by the ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easyquerymanagersql-class"},"Korzh.EasyQuery.Services.EasyQueryManagerSql.Query")," and returns the built statement.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CreateDbResultSet(",(0,r.kt)("inlineCode",{parentName:"td"},"IDataReader")," dataReader, ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/resultsetoptions-class"},"ResultSetOptions")," settings)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/easydbresultset-class"},"EasyDbResultSet")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates result set")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CreateModelCore(",(0,r.kt)("inlineCode",{parentName:"td"},"string")," modelId = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/datamodel-class"},"DataModel")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates new DataModel object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CreateQueryBuilderCore()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/iquerybuilder-interface"},"IQueryBuilder")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the query builder. In this particular kind of EasyQueryManager it will be an instance of SqlQueryBuilder.  This method also builds the query so you can read the result via GetResult method call.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CreateQueryCore()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-namespace/query-class"},"Query")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates new DbQuery object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dispose(",(0,r.kt)("inlineCode",{parentName:"td"},"bool")," disposing)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null},"Releases unmanaged and - optionally - managed resources.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ExportResultSetAsync(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/ieqresultset-interface"},"IEqResultSet")," data, ",(0,r.kt)("inlineCode",{parentName:"td"},"string")," format, ",(0,r.kt)("inlineCode",{parentName:"td"},"Stream")," stream, ",(0,r.kt)("inlineCode",{parentName:"td"},"CancellationToken")," ct = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Task")),(0,r.kt)("td",{parentName:"tr",align:null},"Executes the query and exports the result to a specified format.  To run this operation we need to register an appropriate exporter first.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FetchDataCoreAsync(",(0,r.kt)("inlineCode",{parentName:"td"},"CancellationToken")," ct)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Task"),"<",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/ieqresultset-interface"},"IEqResultSet"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"The actual implemenation of FetchData function.  This method is overridden in EasyQueryManagerBase descendants like EasyQueryManagerSql or EasyQueryManagerLinq.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetAggregatesContainerBuilder(",(0,r.kt)("inlineCode",{parentName:"td"},"IReadOnlyList"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"EasyDataCol"),">"," dataCols, ",(0,r.kt)("inlineCode",{parentName:"td"},"AggregationSettings")," aggrSettings)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/iaggregatescontainerbuilder-interface"},"IAggregatesContainerBuilder")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetConnection()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DbConnection")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the DbConnection associated with this service. If connection is not defined yet - it wil be resolved using ConnectionResolver.  This method opens the connection if it's not opened yet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetConnectionCore()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DbConnection")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the connection object. The default implementations just calls ConnectionResolved to get the connection.  You can override this function in dervived class to implement your own behavior of resolving the connnection by the model ID.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetDataExportSettings(",(0,r.kt)("inlineCode",{parentName:"td"},"string")," format)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IDataExportSettings")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the data export settings.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetEmptyResultSet()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/ieqresultset-interface"},"IEqResultSet")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets any empty result set.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetExportAggrContainer(",(0,r.kt)("inlineCode",{parentName:"td"},"IReadOnlyList"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"EasyDataCol"),">"," dataCols, ",(0,r.kt)("inlineCode",{parentName:"td"},"IDataExportSettings")," settings)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/exportaggrcontainer-class"},"ExportAggrContainer")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetRecordCountAsync(",(0,r.kt)("inlineCode",{parentName:"td"},"CancellationToken")," ct = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Task"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"long"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the record count for the current query")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GetResultSetAsync(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/isqlstatement-interface"},"ISqlStatement")," statement, ",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/resultsetoptions-class"},"ResultSetOptions")," settings = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),", `CancellationToken` ct = ",(0,r.kt)("span",{style:{color:"blue"}},"null"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Task"),"<",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-services-namespace/ieqresultset-interface"},"IEqResultSet"),">"),(0,r.kt)("td",{parentName:"tr",align:null},"Creates and returns a ResultSet object by SQL statement.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PrepareDbCommand(",(0,r.kt)("a",{parentName:"td",href:"/korzh-easyquery-db-namespace/isqlstatement-interface"},"ISqlStatement")," statement, ",(0,r.kt)("inlineCode",{parentName:"td"},"bool")," useCountCommand = False)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DbCommand")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates and prepares the database command.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ReadClientOptions(",(0,r.kt)("inlineCode",{parentName:"td"},"JObject")," clientOptions)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TuneDbCommand(",(0,r.kt)("inlineCode",{parentName:"td"},"DbCommand")," command)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null},"Tunes up the DbCommand object.  By default this method just calls a DbCommandTuner (if any is defined)")))),(0,r.kt)("h3",{id:"static-methods"},"Static Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RegisterDbGate()"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:null})))))}m.isMDXComponent=!0}}]);