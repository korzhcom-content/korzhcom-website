"use strict";(self.webpackChunkeasy_query_docs_docusaurus=self.webpackChunkeasy_query_docs_docusaurus||[]).push([[3123],{3905:(e,s,l)=>{l.d(s,{Zo:()=>d,kt:()=>m});var a=l(67294);function t(e,s,l){return s in e?Object.defineProperty(e,s,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[s]=l,e}function r(e,s){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);s&&(a=a.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),l.push.apply(l,a)}return l}function i(e){for(var s=1;s<arguments.length;s++){var l=null!=arguments[s]?arguments[s]:{};s%2?r(Object(l),!0).forEach((function(s){t(e,s,l[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(l,s))}))}return e}function n(e,s){if(null==e)return{};var l,a,t=function(e,s){if(null==e)return{};var l,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],s.indexOf(l)>=0||(t[l]=e[l]);return t}(e,s);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],s.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(t[l]=e[l])}return t}var o=a.createContext({}),c=function(e){var s=a.useContext(o),l=s;return e&&(l="function"==typeof e?e(s):i(i({},s),e)),l},d=function(e){var s=c(e.components);return a.createElement(o.Provider,{value:s},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var s=e.children;return a.createElement(a.Fragment,{},s)}},p=a.forwardRef((function(e,s){var l=e.components,t=e.mdxType,r=e.originalType,o=e.parentName,d=n(e,["components","mdxType","originalType","parentName"]),u=c(l),p=t,m=u["".concat(o,".").concat(p)]||u[p]||b[p]||r;return l?a.createElement(m,i(i({ref:s},d),{},{components:l})):a.createElement(m,i({ref:s},d))}));function m(e,s){var l=arguments,t=s&&s.mdxType;if("string"==typeof e||t){var r=l.length,i=new Array(r);i[0]=p;var n={};for(var o in s)hasOwnProperty.call(s,o)&&(n[o]=s[o]);n.originalType=e,n[u]="string"==typeof e?e:t,i[1]=n;for(var c=2;c<r;c++)i[c]=l[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,l)}p.displayName="MDXCreateElement"},94115:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>b,frontMatter:()=>r,metadata:()=>n,toc:()=>c});var a=l(87462),t=(l(67294),l(3905));const r={},i=void 0,n={unversionedId:"korzh-easyquery-db-namespace/$index",id:"korzh-easyquery-db-namespace/$index",title:"$index",description:"AutoLinker class",source:"@site/docs/korzh-easyquery-db-namespace/$index.md",sourceDirName:"korzh-easyquery-db-namespace",slug:"/korzh-easyquery-db-namespace/$index",permalink:"/easyquery/docs/api-reference/korzh-easyquery-db-namespace/$index",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PageNavigatorTagHelper class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-aspnetcore-namespace/PageNavigatorTagHelper class"},next:{title:"AutoLinker class",permalink:"/easyquery/docs/api-reference/korzh-easyquery-db-namespace/AutoLinker class"}},o={},c=[{value:"AutoLinker class",id:"autolinker-class",level:2},{value:"ColumnAliasesUsage enum",id:"columnaliasesusage-enum",level:2},{value:"ColumnExtensions class",id:"columnextensions-class",level:2},{value:"ConditionSqlGeneratedEventArgs class",id:"conditionsqlgeneratedeventargs-class",level:2},{value:"CustomSqlColumnDescriptor struct",id:"customsqlcolumndescriptor-struct",level:2},{value:"CustomSqlExpr class",id:"customsqlexpr-class",level:2},{value:"DbConnectionLoaderOptions class",id:"dbconnectionloaderoptions-class",level:2},{value:"DbConnectionModelLoaderOptions class",id:"dbconnectionmodelloaderoptions-class",level:2},{value:"DbEntityAttr class",id:"dbentityattr-class",level:2},{value:"DbEntityAttrDescriptor class",id:"dbentityattrdescriptor-class",level:2},{value:"DbEntityAttrXmlSerializer class",id:"dbentityattrxmlserializer-class",level:2},{value:"DbExprTag class",id:"dbexprtag-class",level:2},{value:"DbFieldInfo class",id:"dbfieldinfo-class",level:2},{value:"DbFieldInfoList class",id:"dbfieldinfolist-class",level:2},{value:"DbGate class",id:"dbgate-class",level:2},{value:"DbGateException class",id:"dbgateexception-class",level:2},{value:"DbGateList class",id:"dbgatelist-class",level:2},{value:"DbInfo class",id:"dbinfo-class",level:2},{value:"DbInfoList class",id:"dbinfolist-class",level:2},{value:"DbKeyFieldInfo class",id:"dbkeyfieldinfo-class",level:2},{value:"DbLinkInfo class",id:"dblinkinfo-class",level:2},{value:"DbLinkInfoList class",id:"dblinkinfolist-class",level:2},{value:"DbModel class",id:"dbmodel-class",level:2},{value:"DbModelExtensions class",id:"dbmodelextensions-class",level:2},{value:"DbModelXmlSerializer class",id:"dbmodelxmlserializer-class",level:2},{value:"DbOperator class",id:"dboperator-class",level:2},{value:"DbOperatorXmlSerializer class",id:"dboperatorxmlserializer-class",level:2},{value:"DbParam class",id:"dbparam-class",level:2},{value:"DbParameters class",id:"dbparameters-class",level:2},{value:"DbQuery class",id:"dbquery-class",level:2},{value:"DbQueryBuilder class",id:"dbquerybuilder-class",level:2},{value:"DbTable class",id:"dbtable-class",level:2},{value:"DbTableInfo class",id:"dbtableinfo-class",level:2},{value:"DbTableInfoList class",id:"dbtableinfolist-class",level:2},{value:"DbTableXmlSerializer class",id:"dbtablexmlserializer-class",level:2},{value:"EOLSymbol enum",id:"eolsymbol-enum",level:2},{value:"FilterExpression class",id:"filterexpression-class",level:2},{value:"FilterExpressionBuilder class",id:"filterexpressionbuilder-class",level:2},{value:"FormatType enum",id:"formattype-enum",level:2},{value:"IConnectionStringBuilderDlg interface",id:"iconnectionstringbuilderdlg-interface",level:2},{value:"ISqlStatement interface",id:"isqlstatement-interface",level:2},{value:"JoinsOrder enum",id:"joinsorder-enum",level:2},{value:"LinkCondType enum",id:"linkcondtype-enum",level:2},{value:"LoginRequestEventArgs class",id:"loginrequesteventargs-class",level:2},{value:"OrderByStyles enum",id:"orderbystyles-enum",level:2},{value:"Path class",id:"path-class",level:2},{value:"PathList class",id:"pathlist-class",level:2},{value:"ResultSetPortion class",id:"resultsetportion-class",level:2},{value:"ResultTableNode class",id:"resulttablenode-class",level:2},{value:"SqlDialect class",id:"sqldialect-class",level:2},{value:"SqlDialectList class",id:"sqldialectlist-class",level:2},{value:"SqlExtras class",id:"sqlextras-class",level:2},{value:"SqlFormats class",id:"sqlformats-class",level:2},{value:"SqlQueryBuilder class",id:"sqlquerybuilder-class",level:2},{value:"SqlQueryBuilderExtensions class",id:"sqlquerybuilderextensions-class",level:2},{value:"SqlStatement class",id:"sqlstatement-class",level:2},{value:"SqlUtils class",id:"sqlutils-class",level:2},{value:"Table class",id:"table-class",level:2},{value:"TableCategory class",id:"tablecategory-class",level:2},{value:"TableCategoryList class",id:"tablecategorylist-class",level:2},{value:"TableLink class",id:"tablelink-class",level:2},{value:"TableLinkList class",id:"tablelinklist-class",level:2},{value:"TableLinkStore class",id:"tablelinkstore-class",level:2},{value:"TableLinkStoreException class",id:"tablelinkstoreexception-class",level:2},{value:"TableLinkType enum",id:"tablelinktype-enum",level:2},{value:"TableLinkXmlSerializer class",id:"tablelinkxmlserializer-class",level:2},{value:"TableList class",id:"tablelist-class",level:2},{value:"TableListException class",id:"tablelistexception-class",level:2},{value:"TablePathFinder class",id:"tablepathfinder-class",level:2},{value:"TableStore class",id:"tablestore-class",level:2},{value:"TableXmlSerializer class",id:"tablexmlserializer-class",level:2},{value:"TableXmlSerializer&lt;T&gt; class",id:"tablexmlserializert-class",level:2},{value:"UsedTableList class",id:"usedtablelist-class",level:2},{value:"VirtualTable class",id:"virtualtable-class",level:2},{value:"VirtualTableXmlSerializer class",id:"virtualtablexmlserializer-class",level:2},{value:"XmlExtensions class",id:"xmlextensions-class",level:2}],d={toc:c},u="wrapper";function b(e){let{components:s,...l}=e;return(0,t.kt)(u,(0,a.Z)({},d,l,{components:s,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"autolinker-class"},"AutoLinker class"),(0,t.kt)("p",null,"Gets or sets the progress indicator object.  This property is used to show progress for some time consuming operations performed inside the model"),(0,t.kt)("h2",{id:"columnaliasesusage-enum"},"ColumnAliasesUsage enum"),(0,t.kt)("p",null,"Represents the conditions when the result SQL should include column aliases."),(0,t.kt)("h2",{id:"columnextensions-class"},"ColumnExtensions class"),(0,t.kt)("p",null,"Gets a value indicating whether this column used the alias name or not."),(0,t.kt)("h2",{id:"conditionsqlgeneratedeventargs-class"},"ConditionSqlGeneratedEventArgs class"),(0,t.kt)("p",null,"Provides data for ConditionSqlGenerated event of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/sqlquerybuilder-class"},"Korzh.EasyQuery.Db.SqlQueryBuilder")," class"),(0,t.kt)("h2",{id:"customsqlcolumndescriptor-struct"},"CustomSqlColumnDescriptor struct"),(0,t.kt)("p",null,"Contains descriptor to create custom sql expression column"),(0,t.kt)("h2",{id:"customsqlexpr-class"},"CustomSqlExpr class"),(0,t.kt)("p",null,"Represents a custom SQL expression"),(0,t.kt)("h2",{id:"dbconnectionloaderoptions-class"},"DbConnectionLoaderOptions class"),(0,t.kt)("h2",{id:"dbconnectionmodelloaderoptions-class"},"DbConnectionModelLoaderOptions class"),(0,t.kt)("p",null,"Represents different options for ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-services-namespace/dbconnectionmodelloader-class"},"Korzh.EasyQuery.Services.DbConnectionModelLoader")," class"),(0,t.kt)("h2",{id:"dbentityattr-class"},"DbEntityAttr class"),(0,t.kt)("p",null,"Base attribute of SQL entity"),(0,t.kt)("h2",{id:"dbentityattrdescriptor-class"},"DbEntityAttrDescriptor class"),(0,t.kt)("h2",{id:"dbentityattrxmlserializer-class"},"DbEntityAttrXmlSerializer class"),(0,t.kt)("h2",{id:"dbexprtag-class"},"DbExprTag class"),(0,t.kt)("p",null,"Contains several constants for db-related expressions tags values"),(0,t.kt)("h2",{id:"dbfieldinfo-class"},"DbFieldInfo class"),(0,t.kt)("p",null,"Represents a structure that contains information about some table field"),(0,t.kt)("h2",{id:"dbfieldinfolist-class"},"DbFieldInfoList class"),(0,t.kt)("p",null,"Represents the list of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbtableinfo-class"},"Korzh.EasyQuery.Db.DbTableInfo")," objects"),(0,t.kt)("h2",{id:"dbgate-class"},"DbGate class"),(0,t.kt)("p",null,"Represents base class which allows to get DB structure information availble for some connection"),(0,t.kt)("h2",{id:"dbgateexception-class"},"DbGateException class"),(0,t.kt)("p",null,"Represents exception class for ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbgate-class"},"Korzh.EasyQuery.Db.DbGate")),(0,t.kt)("h2",{id:"dbgatelist-class"},"DbGateList class"),(0,t.kt)("p",null,"Represents the list of ",(0,t.kt)("inlineCode",{parentName:"p"},"DbGate")," objects"),(0,t.kt)("h2",{id:"dbinfo-class"},"DbInfo class"),(0,t.kt)("p",null,"Represents a structure that contains information about some database"),(0,t.kt)("h2",{id:"dbinfolist-class"},"DbInfoList class"),(0,t.kt)("p",null,"Represents the list of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbinfo-class"},"Korzh.EasyQuery.Db.DbInfo")," objects"),(0,t.kt)("h2",{id:"dbkeyfieldinfo-class"},"DbKeyFieldInfo class"),(0,t.kt)("p",null,"Represents one key field (either primary or foreign key)"),(0,t.kt)("h2",{id:"dblinkinfo-class"},"DbLinkInfo class"),(0,t.kt)("p",null,"Represents a structure that contains information about some link between two database tables"),(0,t.kt)("h2",{id:"dblinkinfolist-class"},"DbLinkInfoList class"),(0,t.kt)("p",null,"Represents the list of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dblinkinfo-class"},"Korzh.EasyQuery.Db.DbLinkInfo")," objects"),(0,t.kt)("h2",{id:"dbmodel-class"},"DbModel class"),(0,t.kt)("p",null,"Database-related implementation of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-namespace/datamodel-class"},"Korzh.EasyQuery.DataModel")," class.  In addition to the basic data it contains also list of database tables and the links between them."),(0,t.kt)("h2",{id:"dbmodelextensions-class"},"DbModelExtensions class"),(0,t.kt)("p",null,"Contains several DbModel extensions"),(0,t.kt)("h2",{id:"dbmodelxmlserializer-class"},"DbModelXmlSerializer class"),(0,t.kt)("h2",{id:"dboperator-class"},"DbOperator class"),(0,t.kt)("p",null,'Represents a logical expression or "predicate". For example: "less than", "is equal to", "starts with".'),(0,t.kt)("h2",{id:"dboperatorxmlserializer-class"},"DbOperatorXmlSerializer class"),(0,t.kt)("h2",{id:"dbparam-class"},"DbParam class"),(0,t.kt)("p",null,"Represents one entry in ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbparameters-class"},"Korzh.EasyQuery.Db.DbParameters")," list"),(0,t.kt)("h2",{id:"dbparameters-class"},"DbParameters class"),(0,t.kt)("p",null,"Represents different parameters of database linked with this ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-namespace/datamodel-class"},"Korzh.EasyQuery.DataModel")," object"),(0,t.kt)("h2",{id:"dbquery-class"},"DbQuery class"),(0,t.kt)("p",null,"Represents query for building SQL command"),(0,t.kt)("h2",{id:"dbquerybuilder-class"},"DbQueryBuilder class"),(0,t.kt)("p",null,"Lets you build SQL commands based on ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbquery-class"},"Korzh.EasyQuery.Db.DbQuery")," object"),(0,t.kt)("h2",{id:"dbtable-class"},"DbTable class"),(0,t.kt)("p",null,"Represents one table in ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbmodel-class"},"Korzh.EasyQuery.Db.DbModel")," object which corresponds to some database table"),(0,t.kt)("h2",{id:"dbtableinfo-class"},"DbTableInfo class"),(0,t.kt)("p",null,"Represents a structure that contains information about some database table"),(0,t.kt)("h2",{id:"dbtableinfolist-class"},"DbTableInfoList class"),(0,t.kt)("p",null,"Represents the list of ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbtableinfo-class"},"Korzh.EasyQuery.Db.DbTableInfo")," objects"),(0,t.kt)("h2",{id:"dbtablexmlserializer-class"},"DbTableXmlSerializer class"),(0,t.kt)("h2",{id:"eolsymbol-enum"},"EOLSymbol enum"),(0,t.kt)("p",null,"Represents the symbol (or symbols) which are used to separate lines in generated SQL statements"),(0,t.kt)("h2",{id:"filterexpression-class"},"FilterExpression class"),(0,t.kt)("p",null,"Represents the result of performing BuildSQL command."),(0,t.kt)("h2",{id:"filterexpressionbuilder-class"},"FilterExpressionBuilder class"),(0,t.kt)("p",null,"Used for building Sql commands using ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbquery-class"},"Korzh.EasyQuery.Db.DbQuery")),(0,t.kt)("h2",{id:"formattype-enum"},"FormatType enum"),(0,t.kt)("p",null,"Represents different database types"),(0,t.kt)("h2",{id:"iconnectionstringbuilderdlg-interface"},"IConnectionStringBuilderDlg interface"),(0,t.kt)("p",null,"Defines  methods for ConnectionString Builder dialog"),(0,t.kt)("h2",{id:"isqlstatement-interface"},"ISqlStatement interface"),(0,t.kt)("h2",{id:"joinsorder-enum"},"JoinsOrder enum"),(0,t.kt)("p",null,"Represents differt types of table order in the FROM clause of generated SQL statement"),(0,t.kt)("h2",{id:"linkcondtype-enum"},"LinkCondType enum"),(0,t.kt)("p",null,"Represents the type of linking condition (field-to-field, field-to-expression, etc.)"),(0,t.kt)("h2",{id:"loginrequesteventargs-class"},"LoginRequestEventArgs class"),(0,t.kt)("p",null,"Provides data for ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbgate-class"},"Korzh.EasyQuery.Db.DbGate.LoginRequest")," event"),(0,t.kt)("h2",{id:"orderbystyles-enum"},"OrderByStyles enum"),(0,t.kt)("p",null,"Represents the way fields appear in ORDER BY clause"),(0,t.kt)("h2",{id:"path-class"},"Path class"),(0,t.kt)("p",null,"Represents list of tables which are linked to each other"),(0,t.kt)("h2",{id:"pathlist-class"},"PathList class"),(0,t.kt)("p",null,"Represents list of paths."),(0,t.kt)("h2",{id:"resultsetportion-class"},"ResultSetPortion class"),(0,t.kt)("p",null,"Represents a portion of result set to return"),(0,t.kt)("h2",{id:"resulttablenode-class"},"ResultTableNode class"),(0,t.kt)("p",null,"Represents one table in the result SQL statement"),(0,t.kt)("h2",{id:"sqldialect-class"},"SqlDialect class"),(0,t.kt)("p",null,"Represents some dialect of SQL syntax (like Oracle, MySQL, ANSI 92, etc)"),(0,t.kt)("h2",{id:"sqldialectlist-class"},"SqlDialectList class"),(0,t.kt)("p",null,"Represents different dialects of SQL"),(0,t.kt)("h2",{id:"sqlextras-class"},"SqlExtras class"),(0,t.kt)("p",null,"Represents different extra clauses of SELECT query."),(0,t.kt)("h2",{id:"sqlformats-class"},"SqlFormats class"),(0,t.kt)("p",null,"Represents different formats of SQL statements."),(0,t.kt)("h2",{id:"sqlquerybuilder-class"},"SqlQueryBuilder class"),(0,t.kt)("p",null,"Lets you build SQL commands based on ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbquery-class"},"Korzh.EasyQuery.Db.DbQuery")," object"),(0,t.kt)("h2",{id:"sqlquerybuilderextensions-class"},"SqlQueryBuilderExtensions class"),(0,t.kt)("p",null,"Contains several extension method used in SqlQueryBulder (and, possibly, other query builders as well)"),(0,t.kt)("h2",{id:"sqlstatement-class"},"SqlStatement class"),(0,t.kt)("p",null,"Represents the result of performing BuildSQL command."),(0,t.kt)("h2",{id:"sqlutils-class"},"SqlUtils class"),(0,t.kt)("p",null,"Converts type form EDMX file into ",(0,t.kt)("inlineCode",{parentName:"p"},"DataType")," enumeration."),(0,t.kt)("h2",{id:"table-class"},"Table class"),(0,t.kt)("p",null,"Table class represents one table in a ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/dbmodel-class"},"Korzh.EasyQuery.Db.DbModel")," object"),(0,t.kt)("h2",{id:"tablecategory-class"},"TableCategory class"),(0,t.kt)("p",null,"Represents a category of tables"),(0,t.kt)("h2",{id:"tablecategorylist-class"},"TableCategoryList class"),(0,t.kt)("p",null,"Represents a list of table categories"),(0,t.kt)("h2",{id:"tablelink-class"},"TableLink class"),(0,t.kt)("p",null,"Represents link between two tables"),(0,t.kt)("h2",{id:"tablelinklist-class"},"TableLinkList class"),(0,t.kt)("p",null,"Represents list of the links (",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/tablelink-class"},"Korzh.EasyQuery.Db.TableLink")," objects)."),(0,t.kt)("h2",{id:"tablelinkstore-class"},"TableLinkStore class"),(0,t.kt)("p",null,"Represents a storage of links connected with some DbModel object"),(0,t.kt)("h2",{id:"tablelinkstoreexception-class"},"TableLinkStoreException class"),(0,t.kt)("p",null,"Class LinkStoreException.  Implements the ",(0,t.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,t.kt)("h2",{id:"tablelinktype-enum"},"TableLinkType enum"),(0,t.kt)("p",null,"Type of the link (inner, outer left, outer right or full)"),(0,t.kt)("h2",{id:"tablelinkxmlserializer-class"},"TableLinkXmlSerializer class"),(0,t.kt)("h2",{id:"tablelist-class"},"TableList class"),(0,t.kt)("p",null,"Represents list of the ",(0,t.kt)("a",{parentName:"p",href:"/korzh-easyquery-db-namespace/table-class"},"Korzh.EasyQuery.Db.Table")," objects."),(0,t.kt)("h2",{id:"tablelistexception-class"},"TableListException class"),(0,t.kt)("p",null,"Class TableListException.  Implements the ",(0,t.kt)("inlineCode",{parentName:"p"},"System.Exception")),(0,t.kt)("h2",{id:"tablepathfinder-class"},"TablePathFinder class"),(0,t.kt)("p",null,"Contains logic for finding path between two tables"),(0,t.kt)("h2",{id:"tablestore-class"},"TableStore class"),(0,t.kt)("p",null,"Represetns storage of tables."),(0,t.kt)("h2",{id:"tablexmlserializer-class"},"TableXmlSerializer class"),(0,t.kt)("h2",{id:"tablexmlserializert-class"},"TableXmlSerializer","<","T",">"," class"),(0,t.kt)("h2",{id:"usedtablelist-class"},"UsedTableList class"),(0,t.kt)("p",null,'Represents a list of "used" tables.  The only difference with orginal TableList is that this class doesn\'t allow to insert already existing table and inserts tables in list according their priority'),(0,t.kt)("h2",{id:"virtualtable-class"},"VirtualTable class"),(0,t.kt)("p",null,"Represents a virtual table.  Virtual tables do not correpond to some table in database but are defined through some SQL SELECT statement instead."),(0,t.kt)("h2",{id:"virtualtablexmlserializer-class"},"VirtualTableXmlSerializer class"),(0,t.kt)("h2",{id:"xmlextensions-class"},"XmlExtensions class"),(0,t.kt)("p",null,"Different extension methods used in other EasyQuery classes."))}b.isMDXComponent=!0}}]);